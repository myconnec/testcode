<div class="col-md-8 col-md-offset-2">
    <div class="row">
        <div class="panel panel-default">

            <div class="panel-heading">
                <h2>Upload Media for New Listing</h2>
            </div>

            <div class="panel-body">

                <%= simple_form_for(@listing, html: {
                    multipart: true,
                    class: 'form-horizontal ',
                    data: {
                        'form-data' => (@s3_direct_post.fields),
                        'url' => @s3_direct_post.url,
                        'host' => URI.parse(@s3_direct_post.url).host
                    }, id: 'new_listing_upload',
                }) do |f| %>

                    <input id="fileupload" type="file" name="file">
                    <div id="listing_media_info"></div>

                <% end %>

<script>
$(function () {
  $('#new_listing_upload').find("input:file").each(function(i, elem) {
    var fileInput = $(elem);
    var form = $(fileInput.parents('form:first'));
    var submitButton = form.find('input[type="submit"]');
    var progressBar  = $("<div class='bar'></div>");
    var barContainer = $("<div class='progress'></div>").append(progressBar);
    
    $('#listing_media_info').after(barContainer);

    fileInput.fileupload({
        fileInput: fileInput,
        url: form.data('url'),
        type: 'POST',
        autoUpload: false,
        formData: form.data('form-data'),
        paramName: 'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
        dataType: 'XML',  // S3 returns XML if success_action_status is set to 201
        replaceFileInput: false,
        add: function (e, data) {
            data.context = $('<button/>').text('Upload')
                .appendTo(document.body)
                .click(function () {
                    data.context = $('<p/>').text('Uploading...').replaceAll($(this));
                    data.submit();
                });
        },
        done: function (e, data) {
            data.context.text('Upload finished.');
            console.log('Now AJAX call and update listings.')
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            progressBar.css('width', progress + '%')
        },
        start: function (e) {
            submitButton.prop('disabled', true);

            progressBar.
            css('background', 'green').
            css('display', 'block').
            css('width', '0%').
            text("Loading...");
        },
        done: function(e, data) {
            submitButton.prop('disabled', false);
            progressBar.text("Uploading done");

            // extract key and generate URL from response
            var key   = $(data.jqXHR.responseXML).find("Key").text();
            var url   = '//' + form.data('host') + '/' + key;

            // create hidden field
            var input = $("<input />", { type:'input', name: fileInput.attr('name'), value: url })
            form.append(input);
        },
        fail: function(e, data) {
            submitButton.prop('disabled', false);

            progressBar.
            css("background", "red").
            text("Failed");
        }
      });
  });
});
</script>

            </div>
        </div>
    </div>
</div>

<%= render "processing_overlay" %>
