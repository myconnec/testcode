---
- hosts: all
  vars:
    APP_ENV: APP_ENV
    APP_NAME: APP_NAME
    AWS_REGION: AWS_REGION
    local_group: ubuntu
    local_user: ubuntu
    repo_ref: master
    SSH_KEY_ID: APKAVAZICA32R3PTTN3W

  become: true
  gather_facts: false

  tasks:
    - name: System Prep
      shell : |
        apt-get clean -y && apt-get update -yq && apt-get install -yq awscli apt-transport-https build-essential python-apt python-minimal python-setuptools python-pip software-properties-common  && apt-get autoclean -y && apt autoremove -yq
        # python-apt python-minimal python-setuptools python-pip software-properties-common 

    # source: https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-18-04/
    - name: Add swap disk to instance
      shell: |
        swapon --show
        dd if=/dev/zero of=/swapfile bs=1024 count=1048576
        chmod 600 /swapfile
        mkswap /swapfile
        swapon /swapfile
        swapon --show
        free -h

    - name: Install system dependencies
      apt:
        pkg:
          - curl
          - git
          - htop
          - imagemagick
          - libcurl4-openssl-dev
          - libffi-dev
          - libmysqlclient-dev
          - libreadline6-dev
          - mysql-client
          - zlib1g
          - zlib1g-dev
        state: present

    - name: Install NodeJs and NPM as Javascript runtime
      apt:
        pkg:
          - nodejs
          - nodejs-dev
          - node-gyp
          - npm
        state: present

    # Source: https://github.com/wakproductions/ansible-examples/blob/master/roles/install-ruby241/tasks/main.yml

    # Begin Ruby build process. Can this be an Ansible `role`?

    - name: Install dependencies specificly for Ruby 2.3.8
      apt:
        pkg:
          - libyaml-dev
          - libxml2-dev
          - libxslt-dev
          - libsqlite3-dev
          - autoconf
          - libc6-dev
          - ncurses-dev
          - automake
          - libtool
          - bison
          - subversion
          - zlib1g
          - zlib1g-dev
          - libssl-dev
        state: present

    # Ruby source, build, install, clean up
    - name: Create a working directory
      file:
        path: /tmp/build_ruby
        state: directory
        mode: "u+rwx"

    - name: Download Ruby 2.3.8
      get_url:
        url:  https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.8.tar.gz
        dest: /tmp/build_ruby/ruby-2.3.8.tar.gz

    - name: Unpack Ruby 2.3.8
      unarchive:
        src: /tmp/build_ruby/ruby-2.3.8.tar.gz
        dest: /tmp/build_ruby/
        remote_src: yes

    - name: Build ruby
      command: >
        {{ item }}
        chdir=/tmp/build_ruby/ruby-2.3.8
        creates=/usr/local/bin/ruby
      with_items:
        - ./configure --enable-shared
        - make
        - make install

    - name: Add ruby symlinks
      file:
        src: "/usr/local/bin/{{ item }}"
        dest: "/usr/bin/{{ item }}"
        state: link
        force: yes
      with_items:
        - erb
        - gem
        - irb
        - rake
        - rdoc
        - ruby

    - name: Remove the working directory
      file:
        path: /tmp/build_ruby
        state: absent

    # Configure SSH credentials - source https://serverfault.com/questions/910071/how-to-generate-host-ssh-keys-via-ansible
    - name: GET SSH private key
      command: >
        mkdir -p /home/{{ local_user }}/.ssh
        aws s3 cp s3://{{ APP_NAME }}-configs/{{ APP_ENV }}/id_rsa /home/{{ local_user }}/.ssh/id_rsa

    - name: Create /home/{{ local_user }}/.ssh/config
      copy:
        dest: /home/{{ local_user }}/.ssh/config
        content: |
          Host git-codecommit.*.amazonaws.com
            User {{ SSH_KEY_ID }}
            IdentityFile /home/{{ local_user }}/.ssh/id_rsa

    # git module is not creating the target dir, do it here instead
    - name: GET SSH private key
      command: >
        mkdir -p /home/{{ local_user }}/{{ APP_NAME }}

    # Git operations
    - name: GiT Clone web app repository
      git:
        accept_hostkey: true
        clone: true
        # dest: /home/{{ local_user }}/{{ APP_NAME }}
        dest: /home/ubuntu/connechub
        remote: origin
        repo: "ssh://git-codecommit.us-east-1.amazonaws.com/v1/repos/{{ APP_NAME }}"
        version: "{{ repo_ref }}"

    - name: GET dotfiles
      command: >
        aws s3 cp s3://{{ APP_NAME }}-configs/{{ APP_ENV }}/.env /home/{{ local_user }}/{{ APP_NAME }}/.env
        aws s3 cp s3://{{ APP_NAME }}-configs/{{ APP_ENV }}/.passwd-s3fs /home/{{ local_user }}/{{ APP_NAME }}/.passwd-s3fs

    # Ruby bundler dependency manager
    - name: Install bunbler and gems
      shell: |
        /home/{{ local_user}}/{{ APP_NAME }}
        gem install bundler -v 1.3.5
        # source https://bundler.io/man/bundle-binstubs.1.html
        bundle --binstubs
        bundle install
        # source https://philna.sh/blog/2017/06/12/speed-up-bundle-install-with-this-one-trick/
        # after v 1.4.0: --jobs=5

    - name: Set owner of ~/ content
      shell: |
        chown {{ local_group }}:{{ local_user }} /home/{{ local_user }} -R
